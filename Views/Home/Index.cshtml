@*
 Use the MinimalLayout for Register.cshtml and Login.cshtml
*@
@{
    Layout = "~/Views/Shared/MinimalLayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>University Query Management System</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="~/css/LnadingPageStyles.css" rel="stylesheet" type="text/css" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">

</head>
<body>
    <header class="header">
        <nav class="nav-container">
            <div class="logo">UQMS</div>
            <div class="nav-links">
                <a href="#features">Features</a>
                <a href="#about">About</a>
                <a href="#contact">Contact</a>
                <a href="/Account/Login">Login</a>
            </div>
            <div class="hamburger">
                <i class="fas fa-bars"></i>
            </div>
        </nav>
    </header>

    <section class="hero">
        <div class="hero-content">
            <h1>University Query Management System</h1>
            <p>A comprehensive platform for managing academic queries between students and staff efficiently and effectively.</p>
            <div class="cta-buttons">
                <button class="button primary-button">Get Started</button>
                <button class="button secondary-button">Learn More</button>
            </div>
        </div>
    </section>

    <section class="features" id="features">
        <div class="features-container">
            <h2 class="section-title">Key Features</h2>
            <p class="section-subtitle">Discover how our system streamlines communication and query resolution in your university.</p>
            
            <div class="features-grid">
                <div class="feature-card">
                    <i class="fas fa-paper-plane feature-icon"></i>
                    <h3>Easy Query Submission</h3>
                    <p>Submit academic queries with detailed descriptions and attachments in just a few clicks.</p>
                </div>
                
                <div class="feature-card">
                    <i class="fas fa-tasks feature-icon"></i>
                    <h3>Efficient Management</h3>
                    <p>Track, prioritize, and manage queries with our intuitive staff interface.</p>
                </div>
                
                <div class="feature-card">
                    <i class="fas fa-chart-line feature-icon"></i>
                    <h3>Progress Tracking</h3>
                    <p>Monitor query status and resolution progress in real-time.</p>
                </div>
                
                <div class="feature-card">
                    <i class="fas fa-cloud-upload-alt feature-icon"></i>
                    <h3>Document Management</h3>
                    <p>Secure cloud storage for all your supporting documents and attachments.</p>
                </div>
            </div>
        </div>
    </section>

    <script>
        // Intersection Observer for scroll animations
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('animate');
                    observer.unobserve(entry.target);
                }
            });
        }, observerOptions);

        // Animate features on scroll
        document.querySelectorAll('.feature-card').forEach(card => {
            observer.observe(card);
        });

        // Enhanced smooth scrolling
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));

                if (target) {
                    const headerOffset = 80;
                    const elementPosition = target.getBoundingClientRect().top;
                    const offsetPosition = elementPosition + window.pageYOffset - headerOffset;

                    window.scrollTo({
                        top: offsetPosition,
                        behavior: 'smooth'
                    });

                    // Close mobile menu if open
                    if (navLinks.classList.contains('active')) {
                        navLinks.classList.remove('active');
                    }
                }
            });
        });

        // Enhanced mobile menu
        const hamburger = document.querySelector('.hamburger');
        const navLinks = document.querySelector('.nav-links');
        const header = document.querySelector('.header');

        hamburger.addEventListener('click', () => {
            navLinks.classList.toggle('active');
        });

        // Close mobile menu when clicking outside
        document.addEventListener('click', (e) => {
            if (!hamburger.contains(e.target) && !navLinks.contains(e.target)) {
                navLinks.classList.remove('active');
            }
        });

        // Enhanced header scroll effect
        let lastScroll = 0;

        window.addEventListener('scroll', () => {
            const currentScroll = window.pageYOffset;

            // Add/remove background color based on scroll position
            if (currentScroll > 50) {
                header.style.background = 'rgba(37, 99, 235, 0.95)';
                header.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.1)';
            } else {
                header.style.background = 'transparent';
                header.style.boxShadow = 'none';
            }

            // Hide/show header based on scroll direction
            if (currentScroll > lastScroll && currentScroll > 500) {
                header.style.transform = 'translateY(-100%)';
            } else {
                header.style.transform = 'translateY(0)';
            }

            lastScroll = currentScroll;
        });

        // Parallax effect for hero section
        const hero = document.querySelector('.hero');
        window.addEventListener('scroll', () => {
            const scrolled = window.pageYOffset;
            hero.style.backgroundPosition = `center ${scrolled * 0.5}px`;
        });

        // Add loading animations to features
        document.querySelectorAll('.feature-card').forEach((card, index) => {
            card.style.animationDelay = `${index * 0.2}s`;
        });
    </script>
</body>
</html>