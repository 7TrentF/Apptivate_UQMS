@model IEnumerable<Apptivate_UQMS_WebApp.Models.KnowledgeBaseFAQ.KnowledgeBase>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

<link href="~/css/AdminKnowledgeBase.css" rel="stylesheet" type="text/css" />


<div class="container-fluid py-4">
    <div class="card shadow">
        <div class="card-header bg-white py-3">
            <div class="d-flex justify-content-between align-items-center flex-wrap gap-3">
                <div>
                    <h2 class="h4 mb-0 text-primary">
                        <i class="fas fa-book me-2"></i>KnowledgeBase Management
                    </h2>
                    <p class="text-muted mb-0 mt-1">
                        Managing @Model.Count() articles
                    </p>
                </div>
                <div class="d-flex gap-2">
                    <div class="input-group">
                        <span class="input-group-text bg-light">
                            <i class="fas fa-search"></i>
                        </span>
                        <input type="text" class="form-control" id="searchInput" 
                               placeholder="Search articles...">
                    </div>
                    <a asp-action="Create" class="btn btn-primary d-flex align-items-center">
                        <i class="fas fa-plus-circle me-2"></i>New Article
                    </a>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0" id="articlesTable">
                    <thead class="table-light">
                        <tr>
                            <th class="px-4" style="width: 40%">
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-file-alt me-2"></i>Title
                                    <button class="btn btn-link btn-sm p-0 ms-2" onclick="sortTable(0)">
                                        <i class="fas fa-sort"></i>
                                    </button>
                                </div>
                            </th>
                            <th style="width: 20%">
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-tag me-2"></i>Category
                                    <button class="btn btn-link btn-sm p-0 ms-2" onclick="sortTable(1)">
                                        <i class="fas fa-sort"></i>
                                    </button>
                                </div>
                            </th>
                            <th style="width: 20%">
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-clock me-2"></i>Last Updated
                                    <button class="btn btn-link btn-sm p-0 ms-2" onclick="sortTable(2)">
                                        <i class="fas fa-sort"></i>
                                    </button>
                                </div>
                            </th>
                            <th class="text-end pe-4" style="width: 20%">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var article in Model)
                        {
                            <tr>
                                <td class="px-4">
                                    <div class="d-flex flex-column">
                                        <span class="fw-medium">@article.Title</span>
                                    </div>
                                </td>
                                <td>
                                    <span class="badge bg-info text-dark">
                                        @article.Category
                                    </span>
                                </td>
                                <td>
                                    <div class="d-flex flex-column">
                                        <span>@article.LastUpdatedDate.ToString("dd/MM/yyyy")</span>
                                        <span class="text-muted small">
                                            @article.LastUpdatedDate.ToString("HH:mm")
                                        </span>
                                    </div>
                                </td>
                                <td class="text-end pe-4">
                                    <div class="btn-group">
                                        <a href="#" class="btn btn-outline-secondary btn-sm" 
                                           data-bs-toggle="tooltip" title="Preview"
                                           onclick="previewArticle(@article.ArticleID)">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@article.ArticleID" 
                                           class="btn btn-outline-primary btn-sm"
                                           data-bs-toggle="tooltip" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <form asp-action="Delete" asp-route-id="@article.ArticleID" 
                                              method="post" class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-outline-danger btn-sm"
                                                    data-bs-toggle="tooltip" title="Delete"
                                                    onclick="return confirmDelete(event, '@article.Title')">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (!Model.Any())
            {
                <div class="text-center py-5">
                    <i class="fas fa-book fa-3x text-muted mb-3"></i>
                    <h5>No Articles Found</h5>
                    <p class="text-muted">Start by creating your first knowledge base article.</p>
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="fas fa-plus-circle me-2"></i>Create Article
                    </a>
                </div>
            }
        </div>
        <div class="card-footer bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <span class="text-muted small">
                    <i class="fas fa-info-circle me-1"></i>
                    Last updated: @(Model.Any() ? Model.Max(a => a.LastUpdatedDate).ToString("dd/MM/yyyy HH:mm") : "Never")
                </span>
                <div class="btn-group">
                    <button class="btn btn-outline-secondary btn-sm" onclick="exportToCSV()">
                        <i class="fas fa-download me-1"></i>Export
                    </button>
                    <button class="btn btn-outline-secondary btn-sm" onclick="printTable()">
                        <i class="fas fa-print me-1"></i>Print
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Preview Modal -->
<div class="modal fade" id="previewModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Article Preview</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="previewContent" class="p-3"></div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script>
        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        });

        // Search functionality
        document.getElementById('searchInput').addEventListener('keyup', function() {
            const searchText = this.value.toLowerCase();
            const table = document.getElementById('articlesTable');
            const rows = table.getElementsByTagName('tr');

            for (let i = 1; i < rows.length; i++) {
                const title = rows[i].cells[0].textContent.toLowerCase();
                const category = rows[i].cells[1].textContent.toLowerCase();
                rows[i].style.display = 
                    title.includes(searchText) || category.includes(searchText)
                        ? ''
                        : 'none';
            }
        });

        // Sorting functionality
        function sortTable(n) {
            const table = document.getElementById('articlesTable');
            let switching = true;
            let dir = 'asc';
            let switchcount = 0;

            while (switching) {
                switching = false;
                const rows = table.rows;

                for (let i = 1; i < rows.length - 1; i++) {
                    let shouldSwitch = false;
                    const x = rows[i].getElementsByTagName('TD')[n];
                    const y = rows[i + 1].getElementsByTagName('TD')[n];
                    
                    if (dir === 'asc') {
                        if (x.textContent.toLowerCase() > y.textContent.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    } else {
                        if (x.textContent.toLowerCase() < y.textContent.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    }

                    if (shouldSwitch) {
                        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                        switching = true;
                        switchcount++;
                    }
                }

                if (switchcount === 0 && dir === 'asc') {
                    dir = 'desc';
                    switching = true;
                }
            }
        }

        // Delete confirmation
        function confirmDelete(event, title) {
            event.preventDefault();
            if (confirm(`Are you sure you want to delete "${title}"?\nThis action cannot be undone.`)) {
                event.target.closest('form').submit();
            }
        }

        // Export to CSV
        function exportToCSV() {
            const table = document.getElementById('articlesTable');
            let csv = [];
            for (let i = 0; i < table.rows.length; i++) {
                const row = [], cols = table.rows[i].cells;
                for (let j = 0; j < cols.length - 1; j++) {
                    row.push('"' + cols[j].textContent.trim().replace(/"/g, '""') + '"');
                }
                csv.push(row.join(','));
            }
            const csvFile = new Blob([csv.join('\n')], { type: 'text/csv' });
            const downloadLink = document.createElement('a');
            downloadLink.download = 'knowledge-base-articles.csv';
            downloadLink.href = window.URL.createObjectURL(csvFile);
            downloadLink.style.display = 'none';
            document.body.appendChild(downloadLink);
            downloadLink.click();
        }

        // Print functionality
        function printTable() {
            window.print();
        }

        // Preview functionality (mock - implement actual preview logic)
        function previewArticle(id) {
            const modal = new bootstrap.Modal(document.getElementById('previewModal'));
            document.getElementById('previewContent').innerHTML = 
                '<div class="text-center"><i class="fas fa-spinner fa-spin"></i> Loading preview...</div>';
            modal.show();
            // Implement actual preview loading logic here
        }
    </script>
}