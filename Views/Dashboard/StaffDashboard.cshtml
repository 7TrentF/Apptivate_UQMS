@using System.Collections
@model Apptivate_UQMS_WebApp.Models.StaffDashboardViewModel

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Staff Dashboard</title>
    <link rel="stylesheet" href="~/css/StaffDashboard.css" asp-append-version="true">
</head>

<body>

    <div class="wrapper-container">

        <!-- Profile Section -->
        <div class="profile-section">
            <div class="profile-info">
                <img src="~/Images/profile-pic.png" alt="Profile Picture" class="profile-pic">
                <div>
                  
                    <p>@Model.Users.Name @Model.Users.Surname</p>
                    <h5>@Model.StaffDetails.Position.PositionName</h5>
                  
                </div>

                <div class="notification-icon">
                    <img src="~/Svgs/notification.svg" alt="Notifications">
                    <span id="notification-badge" class="notification-badge"></span>
                </div>
\

            </div>
           
        </div>

        <!-- Quick Stats Section -->
        <div class="dashboard-stats">
            <div class="stat-card">
                <div class="stat-icon">
                    <img src="~/Images/pending-icon.png" alt="Pending Queries">
                </div>
                <div class="stat-info">
                    <p>Pending Queries</p>
                    <h3>@Model.DashboardStats.PendingCount</h3>
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-icon">
                    <img src="~/Images/resolved.png" alt="Resolved Queries">
                </div>
                <div class="stat-info">
                    <p>Resolved Queries</p>
                    <h3>@Model.DashboardStats.ResolvedCount</h3>
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-icon">
                    <img src="~/Images/in-progress-icon.png" alt="In Progress Queries">
                </div>
                <div class="stat-info">
                    <p>In Progress Queries</p>
                    <h3>@Model.DashboardStats.InProgressCount</h3>
                </div>
            </div>
        </div>

        <!-- Recent Queries Section -->
        <div class="recent-queries">
            <h2>Incoming Student Queries</h2>
            <div class="table-responsive">
                <table class="query-table">
                    <thead>
                        <tr>
                            <th>Student Email</th>
                            <th>Query Type</th>
                            <th>Department</th>
                            <th>Status</th>
                            <th>Submission Date</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var assignment in Model.AssignedQueries)
                        {
                            var query = assignment.Query;
                            <tr class="query-row" onclick="window.location.href='@Url.Action("ViewTicket", "Query", new { queryId = query.QueryID })'">
                                <td>@query.Student?.User?.Email</td>
                                <td>@query.Category?.QueryType?.TypeName</td>
                                <td>@query.Department?.DepartmentName</td>
                                <td>
                                    <span class="status-badge @(query.Status == "Pending" ? "status-pending" : (query.Status == "Resolved" ? "status-resolved" : "status-other"))">
                                        @query.Status
                                    </span>
                                </td>
                                <td>@query.SubmissionDate?.ToString("dd MMM yyyy")</td>
                                <td>
                                    <a href="@Url.Action("ViewTicket", "Query", new { queryId = query.QueryID })" class="btn-view">View</a>
                                    @if (query.ResolvedDate == null)
                                    {
                                        <form asp-action="MarkAsResolved" method="post" class="resolve-form">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="queryId" value="@query.QueryID" />
                                            <button type="submit" class="btn-resolve">Resolve</button>
                                        </form>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Recent Activity Section -->
        <div class="recent-activity-section">
            
       <!-- Team Overview Section -->
<div class="team-overview">
    <h2>Team Overview</h2>
    <div class="table-responsive">
        <table class="team-table">
            <thead>
                <!-- No headers needed here since everything will be in one column -->
            </thead>
            <tbody>
                @foreach (var teamMember in Model.TeamOverview)
                {
                    <tr class="team-row">
                        <td>
                            <div class="staff-info-card">
                                <div class="staff-name">
                                    <strong>@teamMember.StaffName</strong>
                                </div>
                                <div class="query-types">
                                    @if (teamMember.QueryTypes.Any())
                                    {
                                        <ul>
                                            @foreach (var qt in teamMember.QueryTypes)
                                            {
                                                <li>@qt</li>
                                            }
                                        </ul>
                                    }
                                    else
                                    {
                                        <span>N/A</span>
                                    }
                                </div>
                            </div>
                        </td>
                    </tr>
                }
                
            </tbody>
        </table>
    </div>
</div>
        </div>

        </div>

      

    <!-- New Query Form Modal -->
    <div id="query-modal" class="modal">
        <div class="modal-content">
            <span class="close-btn" onclick="closeQueryForm()">&times;</span>
            <h2>Create a New Query</h2>
            <form asp-action="CreateQuery" method="post">
                @Html.AntiForgeryToken()
                <label for="query-subject">Subject</label>
                <input type="text" id="query-subject" name="Subject" placeholder="Enter your query subject" required>

                <label for="query-details">Details</label>
                <textarea id="query-details" name="Details" rows="4" placeholder="Enter query details" required></textarea>

                <button type="submit" class="submit-btn">Submit</button>
            </form>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.18/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder().withUrl("/notificationHub").build();

        connection.on("ReceiveNotification", function (message) {
            alert(message); // Display the notification
        });

        connection.start().catch(function (err) {
            return console.error(err.toString());
        });

        connection.on("ReceiveNotification", function (message) {
            var audio = new Audio('/path-to-notification-sound.mp3');
            audio.play();
            alert(message);
        });


        // Subscribe the staff member to their notification group using StaffID from the Model
        connection.invoke("SendNotification", "@Model.StaffDetails.StaffID");
    </script>



</body>

</html>
